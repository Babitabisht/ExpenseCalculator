{"version":3,"sources":["components/TotalExpense.js","store/expense.js","store/notification.js","components/AddExpense.js","components/ListItem.js","components/ListExpense.js","components/Layout.js","components/Notification.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["TotalExpenses","props","totalAmount","useSelector","state","expense","console","log","Card","className","Header","Body","Title","Text","Button","onClick","event","preventDefault","addExpenses","variant","Footer","expenseSlice","createSlice","name","initialState","expenses","reducers","addExpense","action","payload","Number","amount","expenseActions","actions","notificationSlice","status","title","message","showNotification","notificationActions","AddExpense","expenseRef","useRef","amountRef","dateRef","dispatch","useDispatch","Row","Col","md-3","md-6","Form","onSubmit","item","current","value","date","id","Date","now","notification","Group","Label","Control","ref","type","placeholder","ListItem","ListGroup","Item","ListExpense","expenseItems","map","Layout","useState","showAddExpense","setShowAddExpense","Container","fluid","TotalExpense","Notification","Alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","expenseReducer","notificationReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.18a9f6ca.chunk.js","sourcesContent":["// import {} from 'react';\nimport {  Button,Card } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\n\nconst TotalExpenses = (props) =>{\n\n  \n  \n  const addExpenses =(event)=>{\n    event.preventDefault();\n    props.addExpenses();\n  }\n\n  const totalAmount = useSelector((state) => state.expense.totalAmount);\n  console.log(\"total amount\", totalAmount)\n    return (\n        <Card className=\"text-center bg-dark text-light\">\n        <Card.Header>Expenses</Card.Header>\n        <Card.Body>\n          <Card.Title>Total Expenses Till now </Card.Title>\n          <Card.Text>\n          {totalAmount}\n          </Card.Text>\n          <Button  onClick={addExpenses}  variant=\"primary\"  >Add Expenses</Button>\n        </Card.Body>\n        <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\n      </Card>\n    )\n}\n\n\nexport default TotalExpenses;","import { createSlice } from '@reduxjs/toolkit'\n\n\nconst initialState = {\n    expenses:[],\n    totalAmount:0\n\n}\n\n\nconst expenseSlice = createSlice({\n    name:\"expense\",\n    initialState,\n    reducers:{\n        addExpense :(state, action)=>{\n            return {\n                expenses: [...state.expenses, action.payload],\n                totalAmount: Number(state.totalAmount) + Number(action.payload.amount)\n            }\n        }\n    },\n})\n\n\nexport default expenseSlice.reducer;\nexport const expenseActions = expenseSlice.actions;","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState ={\n    status:\"\",\n    title:\"\",\n    message : \"\"\n}\n\nconst notificationSlice = createSlice({\n    name:\"notification\",\n    initialState,\n    reducers:{\n        showNotification:(state, action )=>{\n            return {\n                status:action.payload.status,\n                title:action.payload.title,\n                message : action.payload.message\n            }\n        }\n    }\n})\n\n\nexport default  notificationSlice.reducer;\nexport  const notificationActions = notificationSlice.actions;","import { Fragment, useRef } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux'\nimport { expenseActions } from '../store/expense';\nimport { notificationActions } from '../store/notification';\n\nconst AddExpense = () => {\n\n    const expenseRef = useRef();\n    const amountRef = useRef();\n    const dateRef = useRef();\n\n\n    const dispatch = useDispatch()\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault();\n        let expense = {\n            item: expenseRef.current.value,\n            amount: amountRef.current.value,\n            date: dateRef.current.value,\n            id: Date.now()\n        }\n        let notification = {\n            status: \"success\",\n            title: \"Notification sent!\",\n            message: `Expense with Id ${expense.id} Added!`\n        }\n\n        dispatch(expenseActions.addExpense(expense))\n\n        dispatch(notificationActions.showNotification(notification))\n\n        expenseRef.current.value = \"\";\n        amountRef.current.value = 0;\n        dateRef.current.value = \"\";\n\n\n    }\n\n    return (\n        <Fragment>\n            <Row className=\"mt-5\">\n                <Col md-3> </Col>\n                <Col md-6>\n                  \n                        <Form onSubmit={onSubmitHandler}>\n                            <Form.Group >\n                                <Form.Label>Expense Item</Form.Label>\n                                <Form.Control\n                                    ref={expenseRef}\n                                    className=\"\" type=\"text\" placeholder=\"Enter the item on which the expense has been made\" />\n                            </Form.Group>\n                            <Form.Group >\n                                <Form.Label>Amount</Form.Label>\n                                <Form.Control\n                                    ref={amountRef}\n                                    type=\"number\" placeholder=\"Amount\" />\n                            </Form.Group>\n                            <Form.Group >\n                                <Form.Label>Date</Form.Label>\n                                <Form.Control\n                                    ref={dateRef}\n                                    type=\"date\" placeholder=\"Date\" />\n                            </Form.Group>\n                            <Form.Group >\n                                <Button type=\"submit\" > Add </Button>\n                            </Form.Group>\n                        </Form>\n                  \n                </Col>\n                <Col md-3> </Col>\n\n            </Row>\n\n\n        </Fragment>\n    )\n}\n\n\nexport default AddExpense;","import { Fragment } from 'react';\nimport { ListGroup , Card} from 'react-bootstrap'\n\nconst ListItem = (props) => {\n\n    return (\n        <Fragment>\n            <Card >\n\n            <ListGroup>\n                <ListGroup.Item> {props.item.item} </ListGroup.Item>\n                <ListGroup.Item>{props.item.amount}</ListGroup.Item>\n                <ListGroup.Item>{props.item.date}</ListGroup.Item>\n                <ListGroup.Item>{props.item.id} </ListGroup.Item>\n            </ListGroup>\n             </Card>\n           \n\n        </Fragment>\n    )\n\n}\n\n\n\nexport default ListItem;","import {Fragment} from 'react';\nimport ListItem from './ListItem';\nimport { useSelector } from 'react-redux'\n\nconst ListExpense =(props)=>{\n\n    const expenseItems = useSelector(state=> state.expense.expenses)\n   \n    return (\n        <Fragment> \n         \n           {expenseItems.map(item=>{\n              return  <ListItem  key={item.id} item={item} />\n            })}\n            \n          \n         </Fragment>   \n    )\n}\n\n\nexport default ListExpense;","import { Fragment, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport TotalExpense from './TotalExpense';\nimport AddExpense from './AddExpense';\nimport ListExpense from './ListExpense';\n\nconst Layout = () => {\n\n    const [showAddExpense, setShowAddExpense] = useState(false)\n\n    const onAddExpenses = () => {\n        setShowAddExpense(!showAddExpense);\n    }\n\n    return (\n        <Fragment>\n            \n            <Container fluid>\n                <Row>\n                    <Col className=\"text-center\">\n                        <TotalExpense addExpenses={onAddExpenses} />\n                    </Col>\n                </Row>\n                {showAddExpense &&\n                    <Row>\n                        <Col className=\"text-center\">\n                            <AddExpense />\n                        </Col>\n                    </Row>}\n\n                <Row>\n                    <Col className=\"text-center\">\n                        <ListExpense />\n                    </Col>\n                </Row>\n            </Container>\n\n        </Fragment>);\n\n}\n\nexport default Layout;","import { Alert } from 'react-bootstrap';\nimport {Fragment} from 'react';\n\n\nconst Notification = (props) => {\n   \n    return (\n        <Fragment>\n          \n           <Alert className=\"text-left mt-5 ml-5 mr-5\" variant={props.notification.status}>\n               <b> {props.notification.title} </b>\n               <p>   {props.notification.message}\n               </p>\n            </Alert>\n          \n        </Fragment>\n    );\n}\n\nexport default Notification;","import './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Layout from './components/Layout';\nimport { Fragment } from 'react';\nimport Notification from './components/Notification';\nimport {useSelector} from 'react-redux';\n\nfunction App() {\n\n  const notification = useSelector(state=>state.notification);\n\n  return (\n    <Fragment>\n      <Notification  notification={notification} />\n      <Container fluid>\n        <Layout />\n    </Container>\n      </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport expenseReducer from  './expense';\nimport  notificationReducer from './notification';\n\n\nexport default configureStore({\n  reducer: {\n      expense :expenseReducer,\n      notification:notificationReducer\n  },\n})\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider  store={store}>  <App />\n   </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}